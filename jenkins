pipeline {
    agent any

    environment {
        AWS_ACCESS_KEY_ID = credentials('aws-access-key-id')
        AWS_SECRET_ACCESS_KEY = credentials('aws-secret-access-key')
        AWS_DEFAULT_REGION = 'us-west-2'
        TF_VERSION = '1.9.7'  // Updated Terraform version
        PATH = "${HOME}/bin:${env.PATH}"  // Add Terraform to the PATH for the whole pipeline
    }

    stages {
        stage('Clone GitHub Repository') {
            steps {
                git url: 'https://github.com/Mano506/terraform.git', branch: 'main'
            }
        }
        stage('Install Dependencies') {
            steps {
                sh '''
                    set -e
                    sudo apt-get update
                    sudo apt-get install -y wget unzip python3 python3-pip  # Install Python and pip
                    pip3 install --upgrade awscli  # Install AWS CLI using pip
                '''
            }
        }
        stage('Install Terraform') {
            steps {
                sh '''
                    set -e
                    echo "Installing Terraform..."
                    if [ -f "$HOME/bin/terraform" ]; then
                        rm $HOME/bin/terraform  # Remove existing binary
                    fi
                    wget https://releases.hashicorp.com/terraform/${TF_VERSION}/terraform_${TF_VERSION}_linux_amd64.zip
                    unzip -o terraform_${TF_VERSION}_linux_amd64.zip -d $HOME/bin
                    rm terraform_${TF_VERSION}_linux_amd64.zip  # Clean up the zip file
                    chmod +x $HOME/bin/terraform
                    terraform version  # Verify installation
                '''
            }
        }
        stage('Verify AWS Credentials') {
            steps {
                sh '''
                    set -e
                    aws sts get-caller-identity || exit 1
                '''
            }
        }
        stage('Terraform Init') {
            steps {
                sh '''
                    set -e
                    terraform init || exit 1
                '''
            }
        }
        stage('Terraform Plan') {
            steps {
                sh '''
                    set -e
                    terraform plan > terraform-plan.log || (cat terraform-plan.log && exit 1)
                '''
            }
        }
        stage('Terraform Apply') {
            steps {
                sh '''
                    set -e
                    terraform apply -auto-approve || exit 1
                '''
            }
        }
    }
}
